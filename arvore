#include <stdio.h>
#include <stdlib.h>

/* Árvore -> Todos os elementos menor que a raiz vai ficar a esquerda e as maiores a direita*/



typedef struct no {
  int valor;
  struct no *direita, *esquerda;
}NoArv;

NoArv* inserir_versao_1(NoArv *raiz, int num){
  if(raiz == NULL){
    NoArv *aux = malloc(sizeof(NoArv));
    aux->valor = num;
    aux->esquerda = NULL;
    aux->direita = NULL;
    return aux;
  }
  else{
    if(num < raiz->valor)
      raiz->esquerda = inserir_versao_1(raiz->esquerda, num);
    else
      raiz->direita = inserir_versao_1(raiz->direita, num);
    return raiz;
  }
}

void imprimir_versao_2(NoArv *raiz){
  if(raiz){
    imprimir_versao_2(raiz->esquerda);
    printf("%d ", raiz->valor);
    imprimir_versao_2(raiz->direita);
  }
}

int main(){
  NoArv *raiz = NULL;

  int opcao, valor;

  do{
    printf("\n0 - Sair\n1 - Inserir\n2 - Imprimir\n\nOpção: ");
    scanf("%d", &opcao);

    switch(opcao){
      case 1:
        printf("\nDigite um Valor: ");
        scanf("%d", &valor);
        raiz = inserir_versao_1(raiz, valor);
        break;
      case 2:
        printf("\nSegunda Impressao:\n");
        imprimir_versao_2(raiz);
        break;
      default:
        if(opcao != 0)
          printf("\n\n OPCÃO INVALIDA!\n\n");
    }
  }while(opcao != 0);
  
  return 0;
}
